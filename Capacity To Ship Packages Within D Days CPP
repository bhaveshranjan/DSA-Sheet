class Solution {
public:


    int isPossible(vector<int>& weights, int days, int mid){
        int dayCount = 1 ;
        int shippedWeight = 0 ;
        for (int i=0; i<weights.size(); i++){
            if (shippedWeight + weights[i] <= mid){
                shippedWeight += weights[i] ;
            }
            else {
                dayCount++ ;
                if (dayCount > days || weights[i] > mid){
                    return false ;
                }
                shippedWeight = weights[i] ;
            }
        }
        return true ;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int s = 0 ;
        int maxWeight = 0 ;
        for (int i=0; i<weights.size(); i++){
            maxWeight += weights[i] ;
        }
        int e = maxWeight ;
        int mid = s + (e-s)/2 ;
        int ans = -1 ;
        while (s <= e){
            if (isPossible(weights, days, mid)){
                ans = mid ;
                e = mid-1 ;
            }
            else {
                s = mid + 1 ;
            }
            mid = s + (e-s)/2 ;
        }
        return ans ;
    }
};

