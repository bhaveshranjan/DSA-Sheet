Optimal Solution

class Solution
{
    public:
    static bool cmp(Item& a, Item& b) {
        double x = (double)a.value / a.weight;
        double y = (double)b.value / b.weight;
        return x >= y;
    }
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        sort(arr, arr + n, cmp);
        double ans = 0;
        
        for (int i = 0; i < n; i++) {
            int weight = arr[i].weight;
            int value = arr[i].value;
            
            if (W >= weight) {
                W -= weight;
                ans += value;
            }
            else {
                ans += (((double)W / weight) * value);
                break;
            }
        }
        
        return ans;
    }
        
};
